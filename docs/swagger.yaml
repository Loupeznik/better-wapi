basePath: /api
definitions:
  models.DeleteRowRequest:
    properties:
      autocommit:
        default: false
        type: boolean
      subdomain:
        type: string
    required:
    - subdomain
    type: object
  models.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  models.Login:
    properties:
      login:
        type: string
      secret:
        type: string
    type: object
  models.Record:
    properties:
      ID:
        type: string
      author_comment:
        type: string
      changed_date:
        type: string
      name:
        type: string
      rdata:
        type: string
      rdtype:
        type: string
      ttl:
        type: string
    type: object
  models.RecordType:
    enum:
    - A
    - CNAME
    - MX
    - TXT
    - NS
    - SRV
    - AAAA
    - CAA
    - NAPTR
    - TLSA
    - SSHFP
    type: string
    x-enum-varnames:
    - A
    - CNAME
    - MX
    - TXT
    - NS
    - SRV
    - AAAA
    - CAA
    - NAPTR
    - TLSA
    - SSHFP
  models.SaveRowRequest:
    properties:
      autocommit:
        default: false
        type: boolean
      data:
        type: string
      subdomain:
        type: string
      ttl:
        default: 3600
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/models.RecordType'
        default: A
    required:
    - data
    - subdomain
    type: object
  models.TokenResponse:
    properties:
      token:
        type: string
    type: object
host: http://localhost:8000
info:
  contact: {}
  description: A wrapper around the Wedos API (WAPI)
  license:
    name: GNU General Public License v3.0
    url: https://github.com/Loupeznik/better-wapi/blob/master/LICENSE
  title: Better WAPI
  version: "1.0"
paths:
  /auth/token:
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Login'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get token
      tags:
      - auth
  /domain/{domain}/{subdomain}/info:
    get:
      parameters:
      - description: Domain
        in: path
        name: domain
        required: true
        type: string
      - description: Subdomain
        in: path
        name: subdomain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Record'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get DNS record for a specific subdomain
      tags:
      - domain
  /domain/{domain}/info:
    get:
      parameters:
      - description: Domain
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Record'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all DNS records for a domain
      tags:
      - domain
  /domain/{domain}/record:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.DeleteRowRequest'
      - description: Domain
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete an existing record
      tags:
      - domain
    post:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SaveRowRequest'
      - description: Domain
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new record
      tags:
      - domain
    put:
      consumes:
      - application/json
      parameters:
      - description: Request body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.SaveRowRequest'
      - description: Domain
        in: path
        name: domain
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "429":
          description: Too Many Requests
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update an existing record
      tags:
      - domain
swagger: "2.0"
